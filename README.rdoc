### Heroku Link

TODO: add Heroku link

### Minimum Viable Product

Stumblr is a web application influenced by Tumblr, allowing users to share and interact with blog posts of various media types. Built using Ruby on Rails and React.js, it will include these minimum features:
- Account creation, user login, and demo login
- Seed data to illustrate the app's features
- Posting of text, photos, links, audio, and video
- Hosted on Heroku
- Styled and interactive (user action feedback)
- Production readme (to replace this readme)

- Interaction with other users' posts (liking and reblogging)
- Post tagging and search by tags

### Wireframes

You should also link to a page containing wireframes of the views essential for
your MVP. Each wireframe should be a basic representation of the layout and
information presented in the view. If you plan to use nested React components,
clearly indicate the heirarchy in your wireframes. We should be able to "click"
through your website using your wireframes. In addition to the view wireframes,
you should diagram a tree indicating your application's overall component structure.
See the sample project proposal for an example of this. 

**NB**: You can use any tool you like to create your wireframes (pen and paper
are completely acceptable). To spare your eyes from my chicken scratches, I made
the sample proposal wireframes using [draw.io][draw.io].

[draw.io]: https://www.draw.io/

### DB Schema

Link to a document outlining the database schema for your app. Build up the
schema by walking through your app's wireframes. Think carefully about what data
will be needed for each view and the best way to store that data. Make note
of any database-level validations and foreign key relationships.

### Implementation Timeline

This will be the road map for your application. Rather than building the
entire project all at once, you're going to implement one feature at a time.
Refer back to your MVP and group the features into logical phases. You
should have a working app at the end of each phase (even if not all of your
features are in yet). For each phase, write a brief game plan and list out any
third-party APIs, front-end and back-end components you will need to implement.

## Bonus Features


## Submission

When you've finished setting up your capstone project repo, add it to Progress
Tracker and email your instructors (instructors-sf@appacademy.io or
instructors-ny@appacademy.io).  A TA will review each proposal and leave
their comments in issues on the project repo. Be prepared to respond to
feedback, and keep your README up to date as you make progress. Happy hunting!
